% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mtsp.R
\name{mtsp}
\alias{mtsp}
\title{Runs the MTSP solver}
\usage{
mtsp(
  xy,
  depots = NULL,
  nSalesmen = 2,
  minTour = 3,
  CostType = 2,
  algorithm = "mtsp_ga",
  popSize = 80,
  numIter = 10,
  Epsilon = 1e-10,
  return_all = FALSE
)
}
\arguments{
\item{xy}{A \code{n} by \code{2} matrix of coordinate positions. Each row has the \code{x} and \code{y} position of the n sites to be visited.}

\item{depots}{A \code{nSales} by \code{2} matrix of coordinate positions for the starting positions / depots. This should have the same number of rows as there are salespersons.}

\item{nSalesmen}{An integer giving the number of salespersons (must be >= 2).}

\item{minTour}{An integer giving the minimum tour length for any of the salesmen.}

\item{CostType}{Possible values are the integers 1, 2 or 3; 1 minimises the total distance travelled, 2 minimises the maximum distance travelled across the salepersons, and 3 also returns total distance.}

\item{algorithm}{Which algorithm to call. Possible choices are \code{"mdmtspv_ga"}, \code{"mdmtspv_ga2"}, or \code{"mtsp_ga"}. See details.}

\item{popSize}{The population size / search space of the GA. Defaults to 80 (should be divisible by 8 but this is corrected within program).}

\item{numIter}{is the number of desired iterations for the algorithm to run after a new best solution is found.}

\item{Epsilon}{A double giving a multiplier on blancing the costs beteen total distance and minmax (only used for \code{costType} 2).}

\item{return_all}{Logical on whether ro return full ouput. Defaults to \code{FALSE}.}
}
\value{
Returns a list with the solution to the MTSP. Depending on \code{return_all} it may include the inputs and the following:
\itemize{
  \item D0 The distance from the depots to each site.
  \item best_tour A matrix where each row gives the sites visited by each salesperson. The first and last values give the depot.
  \item minDist The best cost found by the algorithm. 
  \item minDistTotal The total distance across the salespersons at the interation where the best cost was found by the algorithm. 
  \item generation The number of generations required by the algorithm to find the solution.
  }
}
\description{
Runs the MTSP solver
}
\details{
The algorithm \code{mdmtspv_ga} searches for the best solution with each salesperson starting and ending at a depot. The algorithms \code{"mdmtspv_ga2"}
   and \code{"mtsp_ga"} start and end at the first site on the tour - they do not include depots.
}
\examples{
set.seed(1)
n = 25
xy = matrix(rnorm(n*2), ncol=2)
run = mtsp(xy, nSalesmen=5, CostType=2, popSize=80, 
           numIter=10, algorithm="mtsp_ga", return_all=TRUE)
run
summary(run)
depots = matrix(runif(10), nc=2)
run2 = mtsp(xy, depots=depots, nSalesmen=5, CostType=2, popSize=80,
            numIter=10, algorithm="mdmtspv_ga", return_all=TRUE)
}
